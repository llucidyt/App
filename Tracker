swift
import UIKit
import CoreMotion

class ViewController: UIViewController {
    let motionManager = CMMotionManager()
    var imageView: UIImageView!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        imageView = UIImageView(frame: CGRect(x: 150, y: 150, width: 100, height: 100))
        imageView.image = UIImage(named: "armImage")
        view.addSubview(imageView)
        
        if motionManager.isAccelerometerAvailable {
            motionManager.accelerometerUpdateInterval = 0.1
            motionManager.startAccelerometerUpdates(to: .main) { (data, error) in
                guard let accelerometerData = data else { return }
                let xAxis = accelerometerData.acceleration.x
                let yAxis = accelerometerData.acceleration.y
                
                // Update the position of the imageView based on the movement
                var newX = self.imageView.center.x + CGFloat(xAxis * 5)
                var newY = self.imageView.center.y - CGFloat(yAxis * 5) // Adjusting for orientation
                
                // Keep the imageView within the bounds of the screen
                newX = min(max(newX, 0), self.view.bounds.width)
                newY = min(max(newY, 0), self.view.bounds.height)
                
                self.imageView.center = CGPoint(x: newX, y: newY)
            }
        }
    }
    
    override func viewDidDisappear(_ animated: Bool) {
        super.viewDidDisappear(animated)
        motionManager.stopAccelerometerUpdates()

swift
import UIKit
import CoreMotion

class ViewController: UIViewController {
    let motionManager = CMMotionManager()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        if motionManager.isAccelerometerAvailable {
            motionManager.accelerometerUpdateInterval = 0.1
            motionManager.startAccelerometerUpdates(to: .main) { (data, error) in
                guard let accelerometerData = data else { return }
                let xAxis = accelerometerData.acceleration.x
                let yAxis = accelerometerData.acceleration.y
                // Use the xAxis and yAxis values to move an object on screen
                // For example, update the position of an image view based on the movement
            }
        }
    }
    
    override func viewDidDisappear(_ animated: Bool) {
        super.viewDidDisappear(animated)
        motionManager.stopAccelerometerUpdates()
    }
}

    }
}
